mkdir 02-production-ready-serverless
cd 02-production-ready-serverless

npm init -y
npm install --save-dev serverless           # installs serverless framework
npx sls create --template aws-nodejs        # create nodejs serverless project using default template

npx sls deploy
npx sls remove

npm install --save-dev aws-sdk              # has the dynamodb libraries, adding as dev dependency because pakcage is already in the lambda execution environment

npm install --save-dev serverless-export-env    # plugin to export the environmen tvariables to an .env file
npx sls export-env --all
npm install --save-dev dotenv               # needed to load .env file from code
node .\seed-restaurants.js

npm install --save mustache             # templating library
npm install --save axios                # HTTP client library

npx sls deploy

npm install --save aws4             # signs http requests with your AWS creds

curl -d '{"theme":"cartoon"}' -H "Content-Type: application/json" -X POST https://1upzh0diad.execute-api.us-east-1.amazonaws.com/dev/restaurants/search


## Part 2: Testing
npm install --save-dev jest             # popular test framework from Facebook, it gives you a test runner, assertion library, mocks and stubs all in one package
npm install --save-dev @types/jest      # this and { "typeAcquisition": { "include": [ "jest" ] } } in jsconfig.json enables intellisense support is VS code
npm install --save-dev cheerio          # lets us parse HTML so we can inspect its Content
npm install --save-dev awscred          # lets us resolve the AWS credentials and region
npm install --save lodash
npm install --save-dev cross-env

npm run acceptance                  # runs our acceptance tests
npm install --save chance           # helps generate random strings

npm install --save @middy/core
npm install --save @middy/ssm

npx sls logs -f search-restaurants  # Get the most recent log lines from the lambda function
